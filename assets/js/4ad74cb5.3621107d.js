"use strict";(self.webpackChunkreactor_docs=self.webpackChunkreactor_docs||[]).push([[444],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4444:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const i={title:"Install and configure C# IDE",sidebar_position:3},a=void 0,l={unversionedId:"quick_start/install_configure_ide",id:"quick_start/install_configure_ide",title:"Install and configure C# IDE",description:"Downloading and configuring the C# IDE for the example template is the fourth step",source:"@site/docs/quick_start/install_configure_ide.md",sourceDirName:"quick_start",slug:"/quick_start/install_configure_ide",permalink:"/quick_start/install_configure_ide",draft:!1,editUrl:"https://github.com/NuclearPowered/docs.reactor.gg/blob/master/docs/quick_start/install_configure_ide.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Install and configure C# IDE",sidebar_position:3},sidebar:"docs",previous:{title:"Install .NET SDK and the template",permalink:"/quick_start/install_netsdk_template"},next:{title:"Compile the example mod",permalink:"/quick_start/compile_example_mod"}},s={},p=[{value:"Install C# IDE",id:"install-c-ide",level:2},{value:"Initial configuration of the project",id:"initial-configuration-of-the-project",level:2},{value:"Inside the project file",id:"inside-the-project-file",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Downloading and configuring the C# IDE for the example template is the fourth step\n",(0,o.kt)("a",{parentName:"p",href:"/#overall-goals"},"Overall Goals"),"."),(0,o.kt)("h2",{id:"install-c-ide"},"Install C# IDE"),(0,o.kt)("p",null,"Download Rider or Visual Studio. If you prefer, you can also use a text editor, or a\nlightweight environment like Visual Studio Code."),(0,o.kt)("h2",{id:"initial-configuration-of-the-project"},"Initial configuration of the project"),(0,o.kt)("p",null,"Now, Open the project in your IDE or text editor. Do not worry if your IDE shows a lot of\nerrors. They will disappear at the end of this section. There are a few steps to follow:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Open the ",(0,o.kt)("inlineCode",{parentName:"p"},".csproj")," file."),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"In Rider, right click on the project and go under ",(0,o.kt)("inlineCode",{parentName:"p"},"Edit > Edit .csproj"),". Note that the\nimage below is a sample image, and some information, particularly the name of the\nproject, will not match with our Example mod project."),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("img",{parentName:"p",src:"https://i.stack.imgur.com/uj5yP.png",alt:"open_csproj_rider"}))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"In Visual Studio Code, open up the ",(0,o.kt)("inlineCode",{parentName:"p"},".csproj")," file from the explorer view.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"You can also navigate to the directory in which you cloned the git repository,\nand open the .csproj with a text editor."))))),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"If you can't find the ",(0,o.kt)("inlineCode",{parentName:"p"},".csproj")," file, make sure you are in the right directory.\nThe project is organized in a nested structure. Here is an example directory\nstructure. Note that the exact name of the ",(0,o.kt)("inlineCode",{parentName:"p"},".csproj")," file depends on what you\npassed as the name to ",(0,o.kt)("inlineCode",{parentName:"p"},"dotnet new reactor -n")," when you created the project."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},".\n\u2514\u2500\u2500 ModExperiment\n    \u251c\u2500\u2500 ModExperiment\n    \u2502\xa0\xa0 \u251c\u2500\u2500 ModExperiment.csproj\n    \u2502\xa0\xa0 \u2514\u2500\u2500 TemplatePlugin.cs\n    \u2514\u2500\u2500 ModExperiment.sln\n"))),(0,o.kt)("h3",{id:"inside-the-project-file"},"Inside the project file"),(0,o.kt)("p",null,"In the ",(0,o.kt)("inlineCode",{parentName:"p"},".csproj")," file, there are few important properties:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"GameVersion")," defines which version of the game that the Reactor framework will download."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Description")," should be a description of your mod."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Authors")," should be the name of the author(s) of the mod.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Project Sdk="Microsoft.NET.Sdk">\n  <PropertyGroup>\n    <TargetFramework>net6.0</TargetFramework>\n    <LangVersion>latest</LangVersion>\n    <DebugType>embedded</DebugType>\n\n    <VersionPrefix>1.0.0</VersionPrefix>\n    <VersionSuffix>dev</VersionSuffix>\n    <Description>Mod generated using Reactor Template</Description>\n    \x3c!-- <Authors>your name</Authors> --\x3e\n  </PropertyGroup>\n\n  <PropertyGroup>\n    <GamePlatform Condition="\'$(GamePlatform)\' == \'\'">Steam</GamePlatform>\n    <GameVersion Condition="\'$(GamePlatform)\' == \'Steam\'">2021.6.30</GameVersion>\n    <GameVersion Condition="\'$(GamePlatform)\' == \'Itch\'">2021.6.30</GameVersion>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="Reactor" Version="2.0.0" />\n    <PackageReference Include="BepInEx.Unity.IL2CPP" Version="6.0.0-be.662" Private="false" ExcludeAssets="runtime;native" />\n    <PackageReference Include="AmongUs.GameLibs.Steam" Version="2022.10.25" PrivateAssets="all" />\n\n    <PackageReference Include="BepInEx.AutoPlugin" Version="1.1.0" PrivateAssets="all" />\n    <PackageReference Include="BepInEx.IL2CPP.MSBuild" Version="2.0.1" PrivateAssets="all" ExcludeAssets="runtime" />\n  </ItemGroup>\n\n  <Target Name="Copy" AfterTargets="Build" Condition="\'$(AmongUs)\' != \'\'">\n    <Copy SourceFiles="$(TargetPath)" DestinationFolder="$(AmongUs)/BepInEx/plugins/" UseSymboliclinksIfPossible="true" />\n  </Target>\n</Project>\n')),(0,o.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,o.kt)("p",null,"If you still have any errors, you should refresh your IDE, and IDE should do this\nautomatically. Otherwise, restart the IDE, and it will pick up the proper information\nfrom the project."))}u.isMDXComponent=!0}}]);