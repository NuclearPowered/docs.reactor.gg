"use strict";(self.webpackChunkreactor_docs=self.webpackChunkreactor_docs||[]).push([[509],{3905:(e,t,n)=>{n.d(t,{Zo:()=>g,kt:()=>c});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),d=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},g=function(e){var t=d(e.components);return r.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),p=d(n),c=o,m=p["".concat(u,".").concat(c)]||p[c]||s[c]||i;return n?r.createElement(m,a(a({ref:t},g),{},{components:n})):r.createElement(m,a({ref:t},g))}));function c(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var d=2;d<i;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5761:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>s,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var r=n(7462),o=(n(7294),n(3905));const i={title:"Debugging",sidebar_position:2},a=void 0,l={unversionedId:"guides/debugging",id:"guides/debugging",title:"Debugging",description:"Intro to debugging your mod",source:"@site/docs/guides/debugging.md",sourceDirName:"guides",slug:"/guides/debugging",permalink:"/guides/debugging",draft:!1,editUrl:"https://github.com/NuclearPowered/docs.reactor.gg/blob/master/docs/guides/debugging.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Debugging",sidebar_position:2},sidebar:"docs",previous:{title:"Harmony Guide",permalink:"/guides/harmony_guide"},next:{title:"Custom RPCs",permalink:"/guides/custom_rpcs"}},u={},d=[{value:"Intro to debugging your mod",id:"intro-to-debugging-your-mod",level:2},{value:"Reactor.Debugger",id:"reactordebugger",level:2},{value:"Debugging using your IDE",id:"debugging-using-your-ide",level:2},{value:"Rider",id:"rider",level:3},{value:"VS",id:"vs",level:3}],g={toc:d};function s(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,r.Z)({},g,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"intro-to-debugging-your-mod"},"Intro to debugging your mod"),(0,o.kt)("p",null,"Before launching your mod, we highly recommend for you to turn on bepinex's console for Among Us.\nHead on to the path to your Among Us install. From there, go into ",(0,o.kt)("inlineCode",{parentName:"p"},"BepInEx/config"),".\nYou should see the file ",(0,o.kt)("inlineCode",{parentName:"p"},"BepInEx.cfg"),". Open up the ",(0,o.kt)("inlineCode",{parentName:"p"},"BepInEx.cfg")," file and find the header\n",(0,o.kt)("inlineCode",{parentName:"p"},"[Logging.Console]")," and change ",(0,o.kt)("inlineCode",{parentName:"p"},"Enabled = false")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"Enabled = true")),(0,o.kt)("h2",{id:"reactordebugger"},"Reactor.Debugger"),(0,o.kt)("p",null,"If you wish to start the game with less than 4 clients, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"Reactor.Debugger"),"\nDownload ",(0,o.kt)("a",{parentName:"p",href:"https://nightly.link/NuclearPowered/Reactor/workflows/main/master/Reactor.Debugger.dll"},"Reactor.Debugger.dll")," and copy to your ",(0,o.kt)("inlineCode",{parentName:"p"},"BepInEx/plugins")),(0,o.kt)("h2",{id:"debugging-using-your-ide"},"Debugging using your IDE"),(0,o.kt)("h3",{id:"rider"},"Rider"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Open your ",(0,o.kt)("inlineCode",{parentName:"p"},"doorstop_config.ini")," and set ",(0,o.kt)("inlineCode",{parentName:"p"},"debugEnabled")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"true")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-ini",metastring:"title=doorstop_config.ini",title:"doorstop_config.ini"},"# Specifies whether the mono soft debugger is enabled\ndebugEnabled=true\n# Specifies whether the mono soft debugger should suspend the process and wait for the remote debugger\ndebugSuspend=false\n")),(0,o.kt)("p",{parentName:"li"},"You can also enable ",(0,o.kt)("inlineCode",{parentName:"p"},"debugSuspend")," if you want the game to wait for you to connect a debugger.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Make sure that debug symbols are available (reactor mod template does that by default)")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Make a new ",(0,o.kt)("inlineCode",{parentName:"p"},"Mono Remote")," run configuration\n",(0,o.kt)("img",{alt:"Step 1",src:n(8122).Z,width:"719",height:"165"}),"\n",(0,o.kt)("img",{alt:"Step 2",src:n(9324).Z,width:"579",height:"375"}),"\nMake sure port is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"10000"),"!\n",(0,o.kt)("img",{alt:"Step 3",src:n(4807).Z,width:"1838",height:"1244"}),"\n",(0,o.kt)("img",{alt:"Step 4",src:n(5154).Z,width:"2685",height:"1911"})))),(0,o.kt)("h3",{id:"vs"},"VS"),(0,o.kt)("p",null,"VS could potentially work with ",(0,o.kt)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=GordianDotNet.VSMonoDebugger0d62"},"VSMonoDebugger")," extension, although it is very hacky compared to official support in Rider, if anyone finds a reliable way, please contribute to this page ;)"))}s.isMDXComponent=!0},8122:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/1-fc5dee4225be6e0c4eb8b1f357d3a769.png"},9324:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/2-eb1a493d831f896f05956af090a187dc.png"},4807:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/3-def92e7d46a14a61cdc0980204cae946.png"},5154:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/4-2e87988bac1641904ff7630c2458451f.png"}}]);